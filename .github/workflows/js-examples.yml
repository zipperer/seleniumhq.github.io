name: Run JavaScript examples

on:
  workflow_dispatch:
  schedule:
    - cron: '40 22 * * *'
  pull_request:
    branches:
      - trunk
    paths:
      - 'examples/javascript/**'
  push:
    branches:
      - trunk
    paths:
      - 'examples/javascript/**'

env:
  DISPLAY: :99
  GITHUB_TOKEN: ${{ secrets.SELENIUM_CI_TOKEN }}
  GH_TOKEN: ${{ secrets.SELENIUM_CI_TOKEN }}

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu, windows, macos ]
        release: [ stable, nightly ]
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - name: Checkout GitHub repo
      uses: actions/checkout@v4
    - name: Install Chrome for set binary test
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
      id: setup-chrome
    - name: Install Edge for set binary test
      uses: browser-actions/setup-edge@v1
      with:
        edge-version: stable
      id: setup-edge
    - name: Install Firefox for set binary test
      if: matrix.os != 'windows'
      uses: browser-actions/setup-firefox@v1
      with:
        firefox-version: latest
      id: setup-firefox
    - name: Set ENV Windows
      if: matrix.os == 'windows'
      run: |
        echo "CHROME_BIN=${{ steps.setup-chrome.outputs.chrome-path }}" >> $env:GITHUB_ENV
        echo "EDGE_BIN=C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe" >> $env:GITHUB_ENV
        echo "FF_BIN=C:\Program Files (x86)\Mozilla Firefox\firefox-browser.exe" >> $env:GITHUB_ENV
    - name: Set ENV Mac
      if: matrix.os == 'macos'
      run: |
        echo "CHROME_BIN=${{ steps.setup-chrome.outputs.chrome-path }}" >> "$GITHUB_ENV"
        echo "EDGE_BIN=/Users/runner/hostedtoolcache/msedge/stable/x64/Contents/MacOS/Microsoft Edge" >> "$GITHUB_ENV"
        echo "FF_BIN=/Users/runner/hostedtoolcache/firefox/latest/x64/Contents/MacOS/firefox" >> "$GITHUB_ENV"
    - name: Set ENV Linux
      if: matrix.os == 'ubuntu'
      run: |
        echo "CHROME_BIN=${{ steps.setup-chrome.outputs.chrome-path }}" >> "$GITHUB_ENV"
        echo "EDGE_BIN=/opt/hostedtoolcache/msedge/stable/x64/msedge" >> "$GITHUB_ENV"
        echo "FF_BIN=/opt/hostedtoolcache/firefox/latest/x64/firefox" >> "$GITHUB_ENV"
    - name: Remove driver directories Windows
      if: matrix.os == 'windows'
      run: |
        rm "$env:ChromeWebDriver" -r -v
        rm "$env:EdgeWebDriver" -r -v
        rm "$env:GeckoWebDriver" -r -v
    - name: Remove driver directories Non-Windows
      if: matrix.os != 'windows'
      run: |
            sudo rm -rf $CHROMEWEBDRIVER $EDGEWEBDRIVER $GECKOWEBDRIVER
    - name: Start Xvfb
      if: matrix.os == 'ubuntu'
      run: Xvfb :99 &
    - name: Setup Node Stable
      if: matrix.release == 'stable'
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - name: Setup Node Nightly
      if: matrix.release == 'nightly'
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://npm.pkg.github.com'
    - name: Use Nightly package.json in Ubuntu/macOS
      if: matrix.release == 'nightly' && matrix.os != 'windows'
      run:
        |
        latest_nightly=$(./scripts/latest-nightly-version.sh npm selenium-webdriver)
        npm install --prefix ./examples/javascript --save selenium-webdriver@npm:@seleniumhq/selenium-webdriver@$latest_nightly
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Use Nightly package.json in Windows
      if: matrix.release == 'nightly' && matrix.os == 'windows'
      run:
        |
        $latest_nightly = ./scripts/latest-nightly-version.ps1 npm selenium-webdriver
        npm install --prefix ./examples/javascript --save selenium-webdriver@npm:@seleniumhq/selenium-webdriver@$latest_nightly
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install Requirements
      working-directory: ./examples/javascript
      run: npm install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run tests
      uses: nick-invision/retry@v3.0.0
      with:
        timeout_minutes: 20
        max_attempts: 3
        command: |
          cd examples/javascript
          npm test
